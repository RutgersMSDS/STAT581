
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> SPRT <- function(alpha, beta, theta0, theta1, input_seq) {
+ 	n=length(input_seq)	# stores number of random variables so far
+ 	sum_input_seq = sum(input_seq)
+ 
+ 	a = log(beta / (1-alpha))
+ 	b = log((1-beta) / alpha)
+ 	print(paste('lower bound a', a))
+ 	print(paste('upper bound b', b))
+ 
+ 	# compute cumulative sum of log likelihood ratio
+ 	sum_cum_llr = (n * log((1-theta1)/(1-theta0))) + (log((theta1 * (1-theta0)) / (theta0 * (1-theta1))) * sum_input_seq)
+ 	print(paste('cumulative sum of the Log Likelihood Funtions', sum_cum_llr))
+ 	print(paste('<=a', (sum_cum_llr <= a)))
+ 	print(paste('>=b', (sum_cum_llr >= b)))
+ 	print(paste('>a <b', ((sum_cum_llr < b) & (sum_cum_llr > a))))
+ 
+ 	res = ifelse((sum_cum_llr>a & sum_cum_llr<b), 0, ifelse(sum_cum_llr<=a, -1, 1))
+ 
+ 	return(list(n, input_seq, res))
+ }
> 
> sim <- function(p){
+ 	outcome_seq<-c()
+ 	seq<-c()
+ 	theta0<-0.45
+ 	theta1<-0.55
+ 	alpha<-0.01
+ 	beta<-0.01
+ 	stop<-0
+ 
+ 	while(stop == 0)
+ 	{
+ 		outcome_seq = append(outcome_seq, rbinom(1,1,p))
+ 		seq = append(seq, sum(outcome_seq))
+ 		out = SPRT(alpha, beta, theta0, theta1, seq)
+ 		print(out[3])
+ 		stop<-out[3]
+ 	}
+ 
+ 	ifelse((out[3] == -1), paste("accept: p <=", theta0, "reject: p >=", theta1), 
+ 		paste("accept: p >=", theta1, "reject: p <=", theta0))
+ }
> 
> # sim(0.3)
> sim(0.56)
[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 0.200670695462151"
[1] "<=a FALSE"
[1] ">=b FALSE"
[1] ">a <b TRUE"
[[1]]
[1] 0

[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 0.401341390924302"
[1] "<=a FALSE"
[1] ">=b FALSE"
[1] ">a <b TRUE"
[[1]]
[1] 0

[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 1.00335347731076"
[1] "<=a FALSE"
[1] ">=b FALSE"
[1] ">a <b TRUE"
[[1]]
[1] 0

[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 2.00670695462151"
[1] "<=a FALSE"
[1] ">=b FALSE"
[1] ">a <b TRUE"
[[1]]
[1] 0

[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 3.01006043193227"
[1] "<=a FALSE"
[1] ">=b FALSE"
[1] ">a <b TRUE"
[[1]]
[1] 0

[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 4.01341390924303"
[1] "<=a FALSE"
[1] ">=b FALSE"
[1] ">a <b TRUE"
[[1]]
[1] 0

[1] "lower bound a -4.59511985013459"
[1] "upper bound b 4.59511985013459"
[1] "cumulative sum of the Log Likelihood Funtions 5.41810877747808"
[1] "<=a FALSE"
[1] ">=b TRUE"
[1] ">a <b FALSE"
[[1]]
[1] 1

[1] "accept: p >= 0.55 reject: p <= 0.45"
> 
> proc.time()
   user  system elapsed 
  0.116   0.012   0.121 
