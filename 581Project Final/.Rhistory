ques <- str_trim(res)
return(ques)
}
# function to perform data preprocessing on a raw questions file
questionsPreprocessing <- function(split)
{
# read questions file
inputFile <- paste("questions/questions", ".", split, ".tsv", sep="")
df <- read.delim(inputFile, header=TRUE, sep="\t")
df_raw <- select(df, 'question', 'AnswerKey')
# extract correct answer string
getCorrectAns_v <- Vectorize(getCorrectAns)
(df_raw$ans <- getCorrectAns_v(df_raw$question, df_raw$AnswerKey))
# extract question statement
getQues_v <- Vectorize(getQues)
(df_raw$ques <- getQues_v(df_raw$question))
# concat question and correct answer strings
df_ques_ans <- select(df_raw, 'ques', 'ans')
df_out <- unite(df_ques_ans, 'merged_ques_ans', colnames(df_ques_ans), sep = " ", remove = TRUE, na.rm = TRUE)
# trim leading and trailing spaces
df_out_tidy <- data.frame(lapply(df_out, trimws), stringsAsFactors = FALSE)
# add correct explanation column
df_out_tidy$explanation <- select(df, 'explanation')
print(df_out_tidy)
# export output
outputFile <- paste("questions", ".", split, ".rda", sep="")
saveRDS(object=df_out_tidy,file="questions.rds")
return (df_out_tidy)
}
tidy=questionsPreprocessing("train")
questions <- readRDS("V:/STAT581/581Project/questions.rds")
View(questions)
library(text2vec)#import text2vec
library(data.table)
library(stringr)
trainq<- readRDS(file = "questions.rds")
all_facts<-read.csv("all_facts.csv",header=TRUE)
names(trainq)<-c("ques","explain")
View(all_facts)
View(trainq)
a=trainq$explain
View(a)
prep_fun=function(x){
x = str_to_lower(x)
# remove non-alphanumeric symbols
x = str_replace_all(x, "[^[:alnum:]]", " ")
# collapse multiple spaces
str_replace_all(x, "\\s+", " ")
}
factrim=prep_fun(all_facts$fact)
facttok<-itoken(factrim, preprocessor = tolower, tokenizer = word_tokenizer, progressbar = TRUE)
quetrim=prep_fun(trainq$ques)
quetok<-itoken(quetrim, preprocessor = tolower, tokenizer = word_tokenizer, progressbar = TRUE)
stop_words = c("which", "why","for","its", "what", "where", "of", "as", "how", "is", "a", "that","this", "these","to", "he", "she", "are","in","on","and","an","be","by","it")
vocab = create_vocabulary(quetok, stopwords = stop_words)
pruned_vocab = prune_vocabulary(vocab,term_count_min=1,doc_proportion_max=0.5)
vectorizer = vocab_vectorizer(pruned_vocab)
dtm_qes = create_dtm(quetok, vectorizer)
dtm_fact  = create_dtm(facttok, vectorizer)
simmat = sim2(dtm_qes, dtm_fact, method = "cosine", norm = "l2")
lensim=nrow(simmat)
res<-data.frame()
i=1
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
print(tcor)
ans=paste(all_facts$fact[tcor],sep = ",")
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print(exid)
grepl(exid,trainq$explain[i])
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print(exid)
grepl(exid,trainq$explain[i])
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i])
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
View(a)
a[1]
a[1,]
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i,])
grepl(exid, trainq$explain[i,])
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
warnings()
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i,])
jj=grepl(paste(exid, collapse = "|"), s$string)
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i,])
jj=grepl(paste(exid, collapse = "|"), trainq$explain[i,])
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i,])
print(stri_count_regex(trainq$explain[i,], paste(toMatch, collapse="|")))
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
library(stringi)
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i,])
print(stri_count_regex(trainq$explain[i,], paste(toMatch, collapse="|")))
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
i=1
exist=0
while (i<=20){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
print (i)
print(exid)
print(trainq$explain[i,])
print(stri_count_regex(trainq$explain[i,], paste(exid, collapse="|")))
res<-rbind(res,c(trainq$ques[i],ans))
i=i+1
}
i=1
nexist=0
nrexist=0
exist=0
rexist=0
while (i<=lensim){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
random=sample(simmat[i,],size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
print (0)
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
i=1
nexist=0
nrexist=0
exist=0
rexist=0
while (i<=5){
tcor=order(simmat[i,],decreasing = TRUE)[1:5]
random=sample(simmat[i,],size=5)
print (random)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
print (0)
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
simmat[1,]
nrow(all_facts)
i=1
nexist=0
nrexist=0
exist=0
rexist=0
while (i<=5){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
print (random)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
print (0)
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
i=1
nexist=0
nrexist=0
exist=0
rexist=0
while (i<=5){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
print (i)
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
i=1
nexist=0
nrexist=0
exist=0
rexist=0
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
print (i)
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
cat("not find rate:",nexist/lensim)
cat("random not find rate:",nrexist/lensim)
cat("average each question find:",exist/lensim)
cat("average each question find random:",rexist/lensim)
find
exist
rexist
i=1
nexist=0
nrexist=0
exist=0
rexist=0
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
}
if (findr==0){
nrexist=nrexist+1
}
if (findr!=0){
print(findr)
}
i=i+1
}
i=1
nexist=0
nrexist=0
exist=0
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
cat("not find rate:",nexist/lensim)
cat("random not find rate:",nrexist/lensim)
cat("average each question find:",exist/lensim)
write.table(res, file = "q&a.csv", row.names = FALSE, col.names = FALSE,sep=",")
i=1
nexist=0
nrexist=0
exist=0
qf=0
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
sqf=str_count(trainq$explain[i,], "|")
qf=qf+sqf
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
cat ("average correspond fact:",qf/lensim)
i=1
nexist=0
nrexist=0
exist=0
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:10]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
cat("not find rate:",nexist/lensim)
cat("random not find rate:",nrexist/lensim)
cat("average each question find:",exist/lensim)
library(text2vec)#import text2vec
library(data.table)
library(stringr)
library(stringi)
trainq<- readRDS(file = "questions.rds")
all_facts<-read.csv("all_facts.csv",header=TRUE)
names(trainq)<-c("ques","explain")
a=trainq$explain
prep_fun=function(x){
x = str_to_lower(x)
# remove non-alphanumeric symbols
x = str_replace_all(x, "[^[:alnum:]]", " ")
# collapse multiple spaces
str_replace_all(x, "\\s+", " ")
}
factrim=prep_fun(all_facts$fact)
facttok<-itoken(factrim, preprocessor = tolower, tokenizer = word_tokenizer, progressbar = TRUE)
quetrim=prep_fun(trainq$ques)
quetok<-itoken(quetrim, preprocessor = tolower, tokenizer = word_tokenizer, progressbar = TRUE)
stop_words = c("which", "why","for","its", "what", "where", "of", "as", "how", "is", "a", "that","this", "these","to", "he", "she", "are","in","on","and","an","be","by","it")
vocab = create_vocabulary(quetok, stopwords = stop_words)
pruned_vocab = prune_vocabulary(vocab,term_count_min=1,doc_proportion_max=0.5)
vectorizer = vocab_vectorizer(pruned_vocab)
dtm_qes = create_dtm(quetok, vectorizer)
dtm_fact  = create_dtm(facttok, vectorizer)
simmat = sim2(dtm_qes, dtm_fact, method = "cosine", norm = "l2")
lensim=nrow(simmat)
res<-data.frame()
lenfact=nrow(all_facts)
i=1
nexist=0
nrexist=0
exist=0
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
rexist=rexist+findr
if (find==0){
nexist=nexist+1
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
cat("not find rate:",nexist/lensim)
while (i<=lensim){
ord=order(simmat[i,],decreasing = TRUE)
tcor=ord[1:5]
random=sample(ord,size=5)
ans=paste(all_facts$fact[tcor],sep = ",")
exid=all_facts$id[tcor]
ranid=all_facts$id[random]
find=stri_count_regex(trainq$explain[i,], paste(exid, collapse="|"))
findr=stri_count_regex(trainq$explain[i,], paste(ranid, collapse="|"))
res<-rbind(res,c(trainq$ques[i],ans))
exist=exist+find
if (find==0){
nexist=nexist+1
}
if (findr==0){
nrexist=nrexist+1
}
i=i+1
}
cat("not find rate:",nexist/lensim)
cat("random not find rate:",nrexist/lensim)
cat("average each question find:",exist/lensim)
write.table(res, file = "q&a.csv", row.names = FALSE, col.names = FALSE,sep=",")
